name: Test

on: [push]

jobs:
  job_1:
    name: Make Request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - run: mkdir -p /home/runner/work

      - name: Request Postment Echo GET
        uses: ./
        with:
          url: 'https://postman-echo.com/get'
          method: 'GET'

      - name: Request Postment Echo POST
        uses: ./
        with:
          url: 'https://postman-echo.com/post'
          method: 'POST'
          data: '{ "key": "value" }'

      - name: Request Postman Echo Basic Auth
        id: basic
        uses: ./
        with:
          url: 'https://postman-echo.com/basic-auth'
          method: 'GET'
          username: 'postman'
          password: 'password'
          #output: response

      - run: echo ${{ steps.basic.outputs.response }}
      - run: echo ${{ steps.basic.outputs.response }} > /home/runner/work/somedata.json
        
      - name: Get-Read File
        uses: GenesisSam/get-simple-file-action@v1.0.4
        id: openFile
        with:
          file-name: ${{ '/home/runner/work/somedata.json' }}

      - name: Print Result
        if: success() && steps.openFile.outputs.data
        run: echo "/home/runner/work/somedata.json> ${{ steps.openFile.outputs.data }}"   

      #- run: echo $response > /home/runner/work/somedata.json
      #- name: Print the response status
      #  run: echo ${{ steps.RequestEchoBasicAuth.outputs.status }}
      #  shell: bash
      #- name: Print the response headers
      #  run: echo ${{ steps.RequestEchoBasicAuth.outputs.headers }}
      #  shell: bash
      #- name: Print the response payload
      #  run: echo ${{ steps.RequestEchoBasicAuth.outputs.response }}
      #  shell: bash

      - name: Upload Response
        uses: actions/upload-artifact@v2
        with:
          name: json_data
          path: /home/runner/work/somedata.json

  job_2:
    name: Upload the output
    runs-on: ubuntu-latest
    needs: [job_1]
    steps:
      - name: Download Response
        uses: actions/download-artifact@v1
        with:
          name: json_data

  #job_3:
  #  needs: [job_1]
  #  runs-on: ubuntu-latest
  #  env:
  #    JsonString: ${{ needs.job_1.steps.basic.outputs.response }}
  #  outputs:
  #    matrix: ${{ steps.set-matrix.outputs.matrix }}
  #  steps:
  #    - name: print JSON
  #      run: echo "$JsonString"
    #- name: Print env variable
    #  run: echo "variable ${{ JsonString }}"
  #    - id: set-matrix
  #      run: echo "::set-output name=matrix::job_3.env.JsonString"
      
  #job_4:
  #  needs: [job_3]
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix: ${{ fromJson(needs.job_3.outputs.matrix )}}
  #  steps:
  #  - run: build

  #  - name: show-JSONvalue-byKey
  #    run: echo "parsed authenticated > ${{ matrix }}"
      # run: echo "parsed authenticated > ${{ matrix.authenticated }}"

  job_5:
    name: Mattermost Request
    runs-on: ubuntu-latest
    env:
      username: ${{ secrets.MATTERMOST_USERNAME }}
      pw: ${{ secrets.MATTERMOST_PW }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      #- run: mkdir -p /home/runner/work

      - name: echo env variables
        run: 
          echo username - $username
          echo password check - startsWith( $pw, 'RJ')

      - name: Request Mattermost Login POST
        id: doLogin  
        uses: ./
        with:
          url: 'https://chat.diglife.coop/api/v4/users/login'
          method: 'POST'
          data: '{ "login_id": "${{ $username }}", "password": "${{ $pw }}" }'

      - name: echo Login Response
        run: 
          echo "Input data > ${{ steps.doLogin.input.data }}"
          echo "Output data > ${{ steps.doLogin.output.data }}"

  #job_3:
  #  name: Get-Read File
  #  runs-on: ubuntu-latest
  #  needs: [job_1]
  #  steps:
  #  - uses: actions/checkout@v1

  #  - uses: GenesisSam/get-simple-file-action@v1.0.4
  #    id: openFile
  #    with:
  #      file-name: ${{ '/home/runner/work/somedata.json' }}

  #  - name: result
  #    if: success() && steps.openFile.outputs.data
  #    run: echo "json_data> ${ steps.openFile.outputs.data }"

          #FILE=/home/runner/work/historical-weather-data/historical-weather-data`date +"%Y%m%d"`.json
